import_code("wiz-net.src")

if params.len == 1 and (params[0] == "-h" or params[0] == "--help") then exit("Usage: wifi-access [network device]")

cryptools = include_lib("/lib/crypto.so")
if not cryptools then exit("Error: Missing crypto library")

computer = get_shell.host_computer
if not computer then exit("Error: Missing host computer")

// Figure out the network device to use
if params.len == 0 then
	print "No network device specified, using first in monitor mode"
	netDevice = get_monitor_mode_network_device()
else if params.len == 1 then
	// Check if the network device is in monitor mode
	netDevice = get_monitor_mode_network_device(params[0])
else
	exit("Invalid number of parameters")
end if
print "Using network device: " + netDevice
print

// Figure out which network to use
maxPower = 0
maxBSSID = ""
maxESSID = ""

networks = computer.wifi_networks(netDevice)
for network in networks
	parts = network.split(" ")
	powerStr = parts[1]
	powerStr = slice(powerStr, 0, powerStr.len - 1)
	power = val(powerStr)

	if power > maxPower then
		maxPower = power
		maxBSSID = parts[0]
		maxESSID = parts[2]
	end if
end for

print "Using Network " + maxESSID + " with power: " + maxPower + " and BSSID: " + maxBSSID
print

// Start capturing packets
maxAcks = ceil(300000 / (maxPower + 15))
print "Estimated acks needed: " + maxAcks

// TODO: It'd be nice to be able to specify the filename
err = cryptools.aireplay(maxBSSID, maxESSID, maxAcks)
if err then exit("Error: aireplay failed with error code " + err)
print "aireplay finished successfully and saved to file.cap"

// TODO: Should this move the network out of monitor mode now that we have it?

// Now crack the password
file = get_shell.host_computer.File("file.cap")
if file == null then exit("Cap file not found: "+pathFile)
if not file.is_binary then exit("Cap file is not a binary file.")		
if not file.has_permission("r") then exit("Cap file cannot be read")

password = cryptools.aircrack(file.path)
if password == null then exit("Failed to find a password")
print "Password found: " + password
print

// Delete the file after use (WILL LEAVE A LOG!)
result = file.delete()
if result then 
	print "Error: Failed to delete file.cap: " + result 
else
	print "Deleted file.cap. This will leave a log in the system."
end if

// Connect to the WiFi network
result = computer.connect_wifi(netDevice, maxBSSID, maxESSID, password)
if result != 1 then exit("Error: Failed to connect to WiFi network")
print "Connected to WiFi network: " + maxESSID